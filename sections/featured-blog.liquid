{% liquid
  assign rtlEnable = false
  if settings.content_direction
    if settings.languanges_code != blank
      if settings.languanges_code contains localization.language.iso_code
        assign rtlEnable = true
      endif
    else
      assign rtlEnable = true
    endif
  endif
%}
{% if rtlEnable %}
  <link rel="preload" as="style" href="{{ 'featured-post-rtl.css' | asset_url }}">
  {{ 'featured-post-rtl.css' | asset_url | stylesheet_tag }}
{% else %}
  <link rel="preload" as="style" href="{{ 'featured-post.css' | asset_url }}">
  {{ 'featured-post.css' | asset_url | stylesheet_tag }}
{% endif %}
<div class="section-wrapper {{ section.settings.color_scheme }}-color-scheme {% if section.settings.enable_gradiant %} gradient{% endif %}">
  <div class="container">
    {% liquid
      assign showHeading = false
      if section.settings.heading != blank
        assign showHeading = true
      endif
      if section.settings.button_text != blank and section.settings.button_link != blank
        assign showHeading = true
      endif
    %}
    {% if showHeading %}
      <div class="section-heading-box heading-between">
        {% if section.settings.heading != blank %}
          {%- capture higlightPrefix -%}
        <span class="marker">
      {%- endcapture -%}
      {%- capture highlightSuffix -%}
          {%- render 'marker-text-style' marker_style:section.settings.higlight_style -%}
      {%- endcapture -%}
          <h4
            class="section-heading-title rte{% if section.settings.enable_highlight %} highlight-text{% endif %} {{ section.settings.heading_size }}"
            style="--outline-thickness:{{ section.settings.outline_thickness }};--marker-svg:{{ section.settings.marker_color }};--marker:{{ section.settings.marker_text_color }}"
          >
            {{ section.settings.heading | replace:"[[", higlightPrefix | replace:"]]",highlightSuffix }}
          </h4>
        {% endif %}
        {% if section.settings.button_text != blank and section.settings.button_link != blank %}
          <a
            href="{{ section.settings.button_link }}"
            class="unstyled-link section-link"
            aria-label="{{- section.settings.button_text }}"
          >
            <div class="section-link-inner" data-replace="{{- section.settings.button_text }}">
              <span>{{- section.settings.button_text }}</span>
            </div>
            <svg viewBox="0 0 4.59 7.06" fill="currentColor">
              <g ><polygon points="1.06 7.06 0 6 2.47 3.53 0 1.06 1.06 0 4.59 3.53 1.06 7.06"/></g>
            </svg>
          </a>
        {% endif %}
      </div>
    {% endif %}
    <div class="featured-post__wrapper{% if section.settings.swipe_on_mobile %} scroll-box{% endif %} {% if section.settings.show_content_below == false %} content-overlay{% endif %}">
      <div class="row">
        {% liquid
          assign postCount = 0
          if section.blocks.size > 0
            assign postCount = section.blocks.size
          elsif section.settings.blog.articles.size < section.settings.post_limit
            assign postCount = section.settings.blog.articles.size
          else
            assign postCount = section.settings.post_limit
          endif
          if section.blocks.size > 0
            assign gridClass = 'col-12 col-sm-12 col-md-6 col-lg-6'
            if postCount == 2 and section.settings.swipe_on_mobile
              assign gridClass = 'col-11 col-sm-11 col-md-6 col-lg-6'
            elsif postCount > 2 and section.settings.swipe_on_mobile
              assign gridClass = 'col-11 col-sm-11 col-md-6 col-lg-4'
            elsif section.blocks.size > 2
              assign gridClass = 'col-12 col-sm-12 col-md-6 col-lg-4'
            endif
            for block in section.blocks
              render 'post-grid', postGrid: 'featured-blog', article: block.settings.article, section: section, block: block, gridImageSize: section.settings.grid_image_size, class: gridClass, index: forloop.index0
            endfor
          else
            assign gridClass = 'col-12 col-sm-12 col-md-6 col-lg-6'
            if postCount == 2 and section.settings.swipe_on_mobile
              assign gridClass = 'col-11 col-sm-11 col-md-6 col-lg-6'
            elsif postCount > 2 and section.settings.swipe_on_mobile
              assign gridClass = 'col-11 col-sm-11 col-md-6 col-lg-4'
            elsif section.settings.post_limit > 2
              assign gridClass = 'col-12 col-sm-12 col-md-6 col-lg-4'
            endif
            if section.settings.blog != blank
              if postCount == 1 and section.settings.swipe_on_mobile
                assign gridClass = 'col-11 col-sm-11 col-md-6 col-lg-6'
              elsif postCount > 2 and section.settings.swipe_on_mobile
                assign gridClass = 'col-11 col-sm-11 col-md-6 col-lg-4'
              elsif section.settings.blog.articles.size < 3 and section.settings.post_limit > 2
                assign gridClass = 'col-12 col-sm-12 col-md-6 col-lg-6'
              endif
              for article in section.settings.blog.articles limit: section.settings.post_limit
                render 'post-grid', postGrid: 'featured-blog', article: article, section: section, block: block, gridImageSize: section.settings.grid_image_size, class: gridClass, index: forloop.index0
              endfor
            else
              for i in (1..section.settings.post_limit)
                render 'post-grid', postGrid: 'featured-blog', section: section, gridImageSize: section.settings.grid_image_size, class: gridClass, index: forloop.index0
              endfor
            endif
          endif
        %}
      </div>
    </div>
    {% if section.settings.button_text != blank and section.settings.button_link != blank %}
      <div class="d-block d-md-none text-center mobile-section-link-btn">
        <a href="{{ section.settings.collection.url }}" class="hyperlink">
          <span>{{ section.settings.button_text }}</span>
        </a>
      </div>
    {% endif %}
  </div>
</div>
{%- liquid
  assign opacity = section.settings.overlay_opacity | divided_by: 100.0
  assign opacityColor = section.settings.overlay_bg_color | color_modify: 'alpha', opacity
-%}
<style>
    #shopify-section-{{ section.id }} {
      --inner-space-top:{{ section.settings.top_space_desktop }}px;
      --inner-space-bottom:{{ section.settings.bottom_space_desktop }}px;
    }
    #shopify-section-{{ section.id }} .section-heading-box{
      padding-bottom:{{ section.settings.heading_space_desktop }}px;
    }
    @media only screen and (max-width:767px) {
      #shopify-section-{{ section.id }}.shopify-section{
        --inner-space-top:{{ section.settings.top_space_mobile }}px;
        --inner-space-bottom:{{ section.settings.bottom_space_mobile }}px;
      }
      #shopify-section-{{ section.id }} .section-heading-box{
        padding-bottom:{{ section.settings.heading_space_mobile }}px;
      }
    }
    @media(min-width:768px){
      #shopify-section-{{ section.id }}  .featured-post__wrapper.content-overlay .post__content {
        background: {{ opacityColor }};
      }
    }
    {% if section.settings.section_visibility == 'large' %}
      @media (max-width: 767px) {
        #shopify-section-{{ section.id }}{
          display: none !important;
        }
      }
    {% elsif section.settings.section_visibility == 'small' %}
      @media (min-width: 768px) {
        #shopify-section-{{ section.id }}{
          display: none !important;
        }
      }
  {% endif %}
</style>
{% schema %}
{
  "name": "t:sections.featured_blog.name",
  "tag": "section",
  "class": "section featured-post-section",
  "disabled_on": {
    "groups": ["header", "footer"]
  },
  "max_blocks": 6,
  "settings": [
    {
      "type": "select",
      "id": "section_visibility",
      "label": "t:common.section_visibility.label",
      "default": "always",
      "options": [
        {
          "label": "t:common.section_visibility.options.always.label",
          "value": "always"
        },
        {
          "label": "t:common.section_visibility.options.small_devices.label",
          "value": "small"
        },
        {
          "label": "t:common.section_visibility.options.large_devices.label",
          "value": "large"
        }
      ]
    },
    {
      "type": "inline_richtext",
      "id": "heading",
      "default": "Featured Blog here",
      "info":"t:common.marker_style.info",
      "label": "t:common.heading.label"
    },
    {
      "type": "checkbox",
      "id": "enable_highlight",
      "label": "t:common.highlight_text.label",
      "info": "t:common.highlight_text.info",
      "default": false
    },
    {
      "type":"select",
      "id":"higlight_style",
      "label":"t:common.marker_style.label",
      "default": "basic",
      "options":[
        {
          "value": "basic",
          "label": "t:common.marker_style.options.basic.label"
        },
        {
          "value": "curved",
          "label": "t:common.marker_style.options.curved.label"
        },
        {
          "value": "line",
          "label": "t:common.marker_style.options.line.label"
        },
        {
          "value": "box",
          "label": "t:common.marker_style.options.box.label"
        }
      ]
    },
    {
      "type": "select",
      "id": "outline_thickness",
      "label": "t:common.outline_stroke.label",
      "default": "1px",
      "options": [
        {
          "value": "1px",
          "label": "t:common.outline_stroke.options.thin.label"
        },
        {
          "value": "2px",
          "label": "t:common.outline_stroke.options.thick.label"
        }
      ]
    },
    {
      "type": "select",
      "id": "heading_size",
      "label": "t:common.heading_size.label",
      "default": "h5",
      "options": [
        {
          "value": "h1",
          "label": "t:common.heading_size.options.h1.label"
        },
        {
          "value": "h2",
          "label": "t:common.heading_size.options.h2.label"
        },
        {
          "value": "h3",
          "label": "t:common.heading_size.options.h3.label"
        },
        {
          "value": "h4",
          "label": "t:common.heading_size.options.h4.label"
        },
        {
          "value": "h5",
          "label": "t:common.heading_size.options.h5.label"
        },
        {
          "value": "h6",
          "label": "t:common.heading_size.options.h6.label"
        }
      ]
    },
    {
      "type": "range",
      "id": "heading_space_desktop",
      "label": "t:common.header.heading_space_desktop.label",
      "default": 0,
      "min": 0,
      "max": 100,
      "step": 1,
      "unit":"px"
    },
    {
      "type": "range",
      "id": "heading_space_mobile",
      "label": "t:common.header.heading_space_mobile.label",
      "default": 0,
      "min": 0,
      "max": 100,
      "step": 1,
      "unit":"px"
    },
    {
      "type": "header",
      "content": "t:common.header.link.label"
    },
    {
      "type": "text",
      "id": "button_text",
      "default": "View all",
      "label": "t:sections.featured_blog.settings.link.text.label"
    },
    {
      "type": "url",
      "id": "button_link",
      "label": "t:sections.featured_blog.settings.link.link.label"
    },
    {
      "type": "header",
      "content": "t:sections.featured_blog.settings.blog.header.label"
    },
    {
      "type": "blog",
      "id": "blog",
      "label": "t:sections.featured_blog.settings.blog.blog.label"
    },
    {
      "type": "range",
      "id": "post_limit",
      "label": "t:sections.featured_blog.settings.blog.show_post_range.label",
      "min": 2,
      "max": 6,
      "step": 1,
      "default": 3
    },

    {
      "type": "checkbox",
      "id": "show_author",
      "label": "t:sections.featured_blog.settings.blog.show_author.label",
      "default": true
    },
    {
      "type": "checkbox",
      "id": "show_date",
      "label": "t:sections.featured_blog.settings.blog.show_post.label",
      "default": true
    },
    {
      "type": "checkbox",
      "id": "show_excerpt",
      "default": true,
      "label": "t:sections.featured_blog.settings.blog.show_excerpt.label"
    },
    {
      "type": "checkbox",
      "id": "swipe_on_mobile",
      "default": true,
      "label": "t:sections.featured_blog.settings.blog.show_swipe.label"
    },
    {
      "type": "checkbox",
      "id": "show_content_below",
      "default": false,
      "info": "t:sections.featured_blog.settings.blog.show_content_below.info",
      "label": "t:sections.featured_blog.settings.blog.show_content_below.label"
    },
    {
      "type": "header",
      "content": "t:common.header.overlay_opacity.label"
    },
    {
      "type": "color",
      "id": "overlay_bg_color",
      "label": "t:sections.featured_blog.settings.background.label",
      "default": "#000000"
    },
    {
      "type": "range",
      "id": "overlay_opacity",
      "label": "t:sections.featured_blog.settings.opacity.label",
      "default": 10,
      "min": 0,
      "max": 100,
      "step": 1,
      "unit": "%"
    },
    {
      "type": "select",
      "id": "grid_image_size",
      "label": "t:common.grid_image_size.label",
      "default": "auto",
      "options": [
        {
          "value": "auto",
          "label": "t:common.grid_image_size.options.auto.label"
        },
        {
          "value": "landscape",
          "label": "t:common.grid_image_size.options.landscape.label"
        },
        {
          "value": "portrait",
          "label": "t:common.grid_image_size.options.portrait.label"
        },
        {
          "value": "square",
          "label": "t:common.grid_image_size.options.square.label"
        }
      ]
    },
    {
      "type": "header",
      "content": "t:common.header.color_section.label"
    },
    {
      "type": "select",
      "id": "color_scheme",
      "label": "t:common.color_scheme.label",
      "default": "primary",
      "options": [
        {
          "value": "primary",
          "label": "t:common.color_scheme.options.primary.label"
        },
        {
          "value": "secondary",
          "label": "t:common.color_scheme.options.secondary.label"
        },
        {
          "value": "tertiary",
          "label": "t:common.color_scheme.options.tertiary.label"
        },
        {
          "value": "quaternary",
          "label": "t:common.color_scheme.options.quaternary.label"
        }
      ]
    },
    {
      "type": "color",
      "id": "marker_color",
      "label": "t:common.marker_color.label",
      "default": "#000000"
    },
    {
      "type": "color",
      "id": "marker_text_color",
      "label": "t:common.marker_text_color.label",
      "default": "#000000"
    },
    {
      "type":"checkbox",
      "id":"enable_gradiant",
      "label":"t:common.gradient.label",
      "default":false
    },
    {
      "type": "header",
      "content": "t:common.section_spacing.label"
    },
    {
      "type": "range",
      "id": "top_space_desktop",
      "label": "t:common.section_spacing.top_space_desktop.label",
      "default": 70,
      "min": 0,
      "max": 150,
      "step": 5
    },
    {
      "type": "range",
      "id": "bottom_space_desktop",
      "label": "t:common.section_spacing.bottom_space_desktop.label",
      "default": 70,
      "min": 0,
      "max": 150,
      "step": 5
    },
    {
      "type": "range",
      "id": "top_space_mobile",
      "label": "t:common.section_spacing.top_space_mobile.label",
      "default": 40,
      "min": 0,
      "max": 100,
      "step": 5
    },
    {
      "type": "range",
      "id": "bottom_space_mobile",
      "label": "t:common.section_spacing.bottom_space_mobile.label",
      "default": 40,
      "min": 0,
      "max": 100,
      "step": 5
    }
  ],
  "blocks": [
    {
      "type": "post",
      "name": "t:sections.featured_blog.blocks.article.name",
      "settings": [
        {
          "type": "article",
          "id": "article",
          "label": "t:sections.featured_blog.blocks.article.settings.article.label",
          "info": "t:sections.featured_blog.blocks.article.settings.article.info"
        }
      ]
    }
  ],
  "presets": [
    {
      "name": "t:sections.featured_blog.presets.name"
    }
  ]
}
{% endschema %}
